version: 0.2

env:
  exported-variables:
    - AWS_DEFAULT_REGION

phases:
    install:
        commands:
             - pip3 install -q awscli --upgrade --user
             - yum -q install -y jq
    pre_build:
        commands:
            ### Login to Amazon ECR
             - echo Logging in to Amazon ECR...
             - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
             - REPOSITORY_URI= $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
             - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
             - IMAGE_TAG=${COMMIT_HASH:=latest}
            
    build:
        commands:
            ### Building the image 
             - echo Build started on `date`
             - docker build -t $IMAGE_NAME\:latest .
             - docker tag $IMAGE_NAME:$IMAGE_TAG $REPOSITORY_URI/$IMAGE_NAME:$IMAGE_TAG
             - echo Build completed on `date`
    post_build:
        commands:
            ### Publish the docker image to ECR
            - echo Pushing the Docker image...
            - docker push $REPOSITORY_URI/$IMAGE_NAME:$IMAGE_TAG
            - echo Writing image definitions file...
            - printf '[{"name":"ecom_app","imageUri":"%s"}]' $REPOSITORY_URI/$IMAGE_NAME:$IMAGE_TAG > imagedefinitions.json
            - printf '{"ImageURI":"%s"}' $REPOSITORY_URI/$IMAGE_NAME:$IMAGE_TAG > imageDetail.json
artifacts:
    files:
      - imagedefinitions.json
      - imageDetail.json
      - appspec.yaml
      - taskdef-prod.json